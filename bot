import random
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters


def dic(filename):
    with open(filename, encoding="utf-8") as f:
        return set(word.strip().lower() for word in f if word.strip())


def defin(filename):
    with open(filename, encoding="utf-8") as f:
        definitions = {}
        for line in f:
            if line.strip():
                k = line.strip().split(" ‚Äî ", 1)
                if len(k) == 2:
                    word, definition = k
                    definitions[word.lower()] = definition.strip()
        return definitions


ruswords = dic("C:/Users/1/Documents/word_rus_min.txt")

categories = {
    "–∏–º—è": ["–≥–∞—Ä—Ä–∏", "—Ä–æ–Ω", "–≥–µ—Ä–º–∏–æ–Ω–∞", "—Ö–∞–≥—Ä–∏–¥", "–¥–∂–∏–Ω–Ω–∏", "—Å–∏—Ä–∏—É—Å", "—Ñ—Ä–µ–¥", "–Ω–µ–≤–∏–ª–ª", "–¥–∞–¥–ª–∏", "–ø–µ—Ä—Å–∏",
            "–¥–∂–æ—Ä–¥–∂", "–≤–µ—Ä–Ω–æ–Ω", "–¥—Ä–∞–∫–æ", "—Ñ–ª–µ—Ä", "–ø–æ–ª—É–º–Ω–∞", "—á–∂–æ—É", "–ø–µ—Ç—É–Ω—å—è", "–±–∏–ª–ª", "—Å–µ–¥—Ä–∏–∫", "–±–µ–ª–ª–∞—Ç—Ä–∏—Å–∞",
            "—Å–µ–≤–µ—Ä—É—Å", "–º–∏—Ä—Ç–ª", "–ø–∞—Ä–≤–∞—Ç–∏", "–¥–∏–Ω", "–ª–∏–ª–∏", "—Å–∏–º—É—Å", "–∫—Ä—ç–±–±", "–∫—ç—Ç–∏", "–∞–Ω–¥–∂–µ–ª–∏–Ω–∞", "—ç—Ä–Ω–∏", "–∫–∏–Ω–≥—Å–ª–∏",
            "–∞—Ä—Ç—É—Ä", "–ª–∞–≤–∞–Ω–¥–∞", "–Ω–∞–∑–µ–º–Ω–∏–∫—É—Å", "—Ä–∏—Ç–∞", "–ª—é—Ü–∏—É—Å", "–º–æ–ª–ª–∏", "–¥–∂–µ–π–º—Å", "—Ö–≤–æ—Å—Ç", "–∞–ª—å–±—É—Å", "–∫—Å–µ–Ω–æ—Ñ–∏–ª–∏—É—Å",
            "–Ω–∞—Ä—Ü–∏—Å—Å–∞", "—Ñ–∏–Ω–µ–∞—Å", "–ø—ç–Ω—Å–∏", "–º—é—Ä–∏—ç–ª—å", "–∞–±–µ—Ä—Ñ–æ—Ä—Ç", "–∫–æ—Ä–Ω–µ–ª–∏—É—Å", "—Å—Ç—ç–Ω", "–º–∞—Ä–¥–∂–æ—Ä–∏", "—Ä–∏–º—É—Å", "–±–∞—Ç–∏–ª—å–¥–∞",
            "–±–∞—Ä—Ç–∏", "–¥–æ–ª–æ—Ä–µ—Å", "–º–∏–Ω–µ—Ä–≤–∞", "–æ–ª–∏–≤–µ—Ä", "—Ä–µ–≥—É–ª—É—Å", "—Ä–æ–∑–º–µ—Ä—Ç–∞", "–∫–æ–ª–∏–Ω", "–∑–ª–∞—Ç–æ–ø—É—Å—Ç", "—á–∞—Ä–ª–∏",
            "–≥–æ—Ä–∞—Ü–∏–π", "–ø–∞–¥–º–∞", "–ø–∏—Ç–µ—Ä", "–≤–∏–∫—Ç–æ—Ä", "–Ω–∏–º—Ñ–∞–¥–æ—Ä–∞", "–æ–ª–∏–º–ø–∏—è"],
    "—Ñ–∞–º–∏–ª–∏—è": ["–¥–∞–º–±–ª–¥–æ—Ä", "—É–∏–∑–ª–∏", "—Å–Ω–µ–π–ø", "–ø–æ—Ç—Ç–µ—Ä", "–º–∞–ª—Ñ–æ–π", "–º–∞–∫–≥–æ–Ω–∞–≥–∞–ª–ª", "–∞–º–±—Ä–∏–¥–∂", "—Ñ–∞–¥–∂", "–≥—Ä—é–º", "—Å–ª–∏–∑–Ω–æ—Ä—Ç",
                "—Ç–æ–Ω–∫—Å", "–±–ª—ç–∫", "—Ç—Ä–µ–ª–æ–Ω–∏", "–∫—Ä–∞—É—á", "—Ä–µ–¥–¥–ª", "—Ñ–∏–ª—á", "–ª–æ–∫–æ–Ω—Å", "–ø–æ–º—Ñ—Ä–∏", "–∫—Ä–∞–º", "–≥—Ä—ç–π–Ω–¥–∂–µ—Ä",
                "–≤—É–¥", "–¥–∏–≥–≥–æ—Ä–∏", "–ª—é–ø–∏–Ω", "—Å–∫–∏—Ç–µ—Ä", "—Å–∫—Ä–∏–º–¥–∂–µ—Ä", "–ø–µ—Ç—Ç–∏–≥—Ä—é", "–¥—É—Ä—Å–ª—å", "–∫–∞—Ä–∫–∞—Ä–æ–≤", "–∫–≤–∏—Ä—Ä–µ–ª–ª",
                "—Ñ–ª–∏—Ç–≤–∏–∫", "–æ–ª–ª–∏–≤–∞–Ω–¥–µ—Ä", "–ª–∞–≤–≥—É–¥", "–¥–æ–ª–≥–æ–ø—É–ø—Å", "—è–∫—Å–ª–∏", "–¥–∂–æ—Ä–¥–∞–Ω", "—Ñ–∏–≥–≥", "–¥–µ–ª–∞–∫—É—Ä",
                "–ª–µ—Å—Ç—Ä–µ–π–Ω–¥–∂", "–º–∞–∫–ª–∞–≥–≥–µ–Ω", "—Ñ–∏–Ω–Ω–∏–≥–∞–Ω", "—á–∞–Ω–≥", "–≥–æ–π–ª", "–∫—Ä—ç–±–±"],
    "–≤–æ–ª—à–µ–±–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ –∏–ª–∏ –¥–æ–º–∞—à–Ω–∏–π –ª—é–±–∏–º–µ—Ü": ["–¥–æ–±–±–∏", "–∫–∏–∫–∏–º–µ—Ä", "–≤–∏–Ω–∫–∏", "–¥–µ–º–µ–Ω—Ç–æ—Ä", "—ç–ª—å—Ñ", "–ø–∏–≤–∑", "—Å–æ–≤–∞",
                                                "–±—É–∫–ª—è",
                                                "–∂–∏–≤–æ–≥–ª–æ—Ç", "—Ñ–µ–Ω–∏–∫—Å", "–∫—Ä—é–∫–æ—Ö–≤–∞—Ç", "–≥–æ–±–ª–∏–Ω", "–¥—Ä–∞–∫–æ–Ω", "–∫–æ—Ä–æ—Å—Ç–∞",
                                                "–∫–ª—ã–∫",
                                                "–Ω–æ—Ä—Ä–∏—Å", "—Ñ–ª–æ—Ä–µ–Ω—Ü", "–∫–ª—é–≤–æ–∫—Ä—ã–ª", "—Ñ–æ—É–∫—Å", "–∫–µ–Ω—Ç–∞–≤—Ä", "—Ç—Ä–æ–ª–ª—å",
                                                "–≤–∞—Å–∏–ª–∏—Å–∫",
                                                "–≥–∏–ø–ø–æ–≥—Ä–∏—Ñ", "–∞—Ä–∞–≥–æ–≥", "–ª–∞–Ω—å", "–±–æ–≥–≥–∞—Ä—Ç", "–≥–æ—Ä–≥—É–ª—å—è", "–ø—É—à–æ–∫",
                                                "–Ω–∞–≥–∞–π–Ω–∞"],
    "–∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ": ["–∞–∫—Ü–∏–æ", "—ç–∫—Å–ø–µ–ª–ª–∏–∞—Ä–º—É—Å", "–∫—Ä—É—Ü–∏–æ", "–∞–ª–æ—Ö–æ–º–æ—Ä–∞", "–∏–º–ø–µ—Ä–∏–æ", "—Ä–µ–¥—É–∫—Ç–æ", "—Ä–µ–¥–∏–∫—É–ª—É—Å", "–ª—é–º–æ—Å",
                   "–ª–µ–≤–∏–æ—Å–æ"],
    "–≤–æ–ª—à–µ–±–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —á—Ç–æ-—Ç–æ –≤–æ–ª—à–µ–±–Ω–æ–µ": ["–ø–∞–ª–æ—á–∫–∞", "–º–∞–Ω—Ç–∏—è", "–º–µ—Ç–ª–∞", "–∑–µ–ª—å–µ", "–º–µ–¥–∞–ª—å–æ–Ω", "–∫—É–±–æ–∫",
                                                      "–∫—Ä–µ—Å—Ç—Ä–∞–∂", "—à–ª—è–ø–∞", "–æ–∫–∫–ª—é–º–µ–Ω—Ü–∏—è", "–≤—Ä–µ–¥–Ω–æ—Å–∫–æ–ø", "–∞–º–æ—Ä—Ç–µ–Ω—Ü–∏—è",
                                                      "–º–∞–Ω–¥—Ä–∞–≥–æ—Ä–∞", "–º–∞—Ö–æ–≤–∏–∫", "–¥–∏–∞–¥–µ–º–∞", "–∫—Ä–∏—á–∞–ª–∫–∞", "–æ–º—É—Ç", "–ø–æ—Ä—Ç—Ä–µ—Ç",
                                                      "–ø–∞—Ç—Ä–æ–Ω—É—Å", "–ø—Ä–æ—Ä–æ–∫", "–≥–∞–ª–µ–æ–Ω", "—à—Ä–∞–º", "–º–µ—Ç–∫–∞", "–∑–∞–∫–ª—è—Ç–∏–µ",
                                                      "–∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ"],
    "–º–µ—Å—Ç–æ –∏–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è": ["—Ö–æ–≥–≤–∞—Ä—Ç—Å", "–∑–∞–º–æ–∫", "—Ö–æ–≥—Å–º–∏–¥", "–∞–∑–∫–∞–±–∞–Ω", "–≥—Ä–∏–Ω–≥–æ—Ç—Ç—Å", "–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞", "–¥—É—Ä–º—Å—Ç—Ä–∞–Ω–≥",
                              "–º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ", "–æ—Ä–¥–µ–Ω"],
    "—Ö–æ–≥–≤–∞—Ä—Ç—Å: —É—á–µ–±–∞, —Å–æ–±—ã—Ç–∏—è –∏ —Å–ø–æ—Ä—Ç": ["–∫–≤–∏–¥–¥–∏—á", "—Ç—É—Ä–Ω–∏—Ä", "—Å–Ω–∏—Ç—á", "–∫–≤–æ—Ñ—Ñ–ª", "–±–ª–∞–¥–∂–µ—Ä", "–±–∞–ª", "–∑–µ–ª—å–µ–≤–∞—Ä–µ–Ω–∏–µ",
                                         "—Ç—Ä–∞–Ω—Å—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", "–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—è", "—Ç—Ä–∞–≤–æ–ª–æ–≥–∏—è", "–∂–∞–±–∞", "–≥—Ä–∏—Ñ—Ñ–∏–Ω–¥–æ—Ä", "—Å–ª–∏–∑–µ—Ä–∏–Ω",
                                         "–∫–æ–≥—Ç–µ–≤—Ä–∞–Ω", "–ø—É—Ñ—Ñ–µ–Ω–¥—É–π"],
    "—Ä–æ–ª—å –∏–ª–∏ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –≥—Ä—É–ø–ø–∞": ["–ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä", "–≤–æ–ª—à–µ–±–Ω–∏–∫", "–º–∞–≥–ª", "–ø–æ–∂–∏—Ä–∞—Ç–µ–ª—å", "–º–∞—Ä–æ–¥–µ—Ä", "–≥—Ä—è–∑–Ω–æ–∫—Ä–æ–≤–∫–∞",
                                   "–ø–æ–ª—É–∫—Ä–æ–≤–∫–∞"]
}

hpwords = [word for words in categories.values() for word in words]

definitions = defin("C:/Users/1/Documents/hints.txt")

allwords = ruswords.union(hpwords)

hpwordle = {}

stats = {}


def gamestart(user_id):
    category = random.choice(list(categories.keys()))
    secretword = random.choice(categories[category])
    return {
        "secretword": secretword,
        "category": category,
        "attemptsleft": len(secretword) + 1,
        "length": len(secretword),
        "guesses": []
    }


def rep(secretword, guess):
    repletters = [""] * len(secretword)
    secretletters = list(secretword)
    guessletters = list(guess)

    for i in range(len(secretword)):
        if guessletters[i] == secretletters[i]:
            repletters[i] = f"üü©{guessletters[i]}"
            secretletters[i] = None
            guessletters[i] = None

    for i in range(len(secretword)):
        if guessletters[i] is not None:
            if guessletters[i] in secretletters:
                repletters[i] = f"üü®{guessletters[i]}"
                secretletters[secretletters.index(guessletters[i])] = None
            else:
                repletters[i] = f"‚¨ú{guessletters[i]}"

    return "".join(repletters)


def allowedword(word, length):
    return len(word) == length and word in allwords


def userstats(userid, won):
    if userid not in stats:
        stats[userid] = {"hpwordle": 0, "wins": 0, "losses": 0}
    stats[userid]["hpwordle"] += 1
    if won:
        stats[userid]["wins"] += 1
    else:
        stats[userid]["losses"] += 1


async def start(upd: Update, context: ContextTypes.DEFAULT_TYPE):
    userid = upd.effective_user.id
    hpwordle[userid] = gamestart(userid)
    length = hpwordle[userid]["length"]
    category = hpwordle[userid]["category"]
    attempts = hpwordle[userid]["attemptsleft"]
    await upd.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç! –ú—ã –∑–∞–≥–∞–¥–∞–ª–∏ —Ç–µ–±–µ —Å–ª–æ–≤–æ –∏–∑ {length} –±—É–∫–≤.\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n"
        f"–£ —Ç–µ–±—è –µ—Å—Ç—å {attempts} –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å."
    )


async def process(upd: Update, context: ContextTypes.DEFAULT_TYPE):
    userid = upd.effective_user.id
    usertext = upd.message.text.lower()

    if userid not in hpwordle:
        await upd.message.reply_text("–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /start")
        return

    sgame = hpwordle[userid]

    if not allowedword(usertext, sgame["length"]):
        await upd.message.reply_text("–¢–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞(")
        return

    sgame["attemptsleft"] -= 1
    res = rep(sgame["secretword"], usertext)
    sgame["guesses"].append((usertext, res))

    if usertext == sgame["secretword"]:
        userstats(userid, True)
        await upd.message.reply_text(f"–£—Ä–∞–∞–∞–∞! –¢—ã —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ: {sgame['secretword']}")
        del hpwordle[userid]
        return

    if sgame["attemptsleft"] == 1:
        definition = definitions.get(sgame["secretword"])
        if definition:
            await upd.message.reply_text(f"–ü–æ–¥—Å–∫–∞–∑–∫–∞:\n{definition}")

    if sgame["attemptsleft"] == 0:
        userstats(userid, False)
        await upd.message.reply_text(f"–ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å(\n–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {sgame['secretword']}")
        del hpwordle[userid]
        return

    await upd.message.reply_text(
        f"{res}\n–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å {sgame['attemptsleft']} –ø–æ–ø—ã—Ç–æ–∫\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!"
    )


async def showstats(upd: Update, context: ContextTypes.DEFAULT_TYPE):
    userid = upd.effective_user.id
    yourstats = stats.get(userid)
    if not stats:
        await  upd.message.reply_text("–¢—ã –µ—â–µ –Ω–µ –∏–≥—Ä–∞–ª. –ü–æ–ø—Ä–æ–±—É–π —Å–µ–π—á–∞—Å!")
    else:
        hpwordle = yourstats["hpwordle"]
        wins = yourstats["wins"]
        losses = yourstats["losses"]
        percent = (wins / hpwordle) * 100 if hpwordle > 0 else 0
        await upd.message.reply_text(
            f"–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
            f"–í—Å–µ–≥–æ –∏–≥—Ä: {hpwordle}\n"
            f"–£–≥–∞–¥–∞–Ω–æ: {wins}\n"
            f"–ù–µ —É–≥–∞–¥–∞–Ω–æ: {losses}\n"
            f"–ü—Ä–æ—Ü–µ–Ω—Ç —É–≥–∞–¥—ã–≤–∞–Ω–∏–π: {percent:.1f}%"

        )


async def helppp(upd: Update, context: ContextTypes.DEFAULT_TYPE):
    await upd.message.reply_text(
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É\n"
        "/stats - —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
    )


from telegram import BotCommand


async def setup_commands(app):
    await app.bot.set_my_commands([
        BotCommand("start", "–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É"),
        BotCommand("stats", "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    ])


TOKEN = "7993255113:AAFjs_EHDzQ-V29p3nXU9SjxsAcxPFsv0F8"
app = ApplicationBuilder().token(TOKEN).post_init(setup_commands).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("stats", showstats))
app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), process))

print("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
app.run_polling()
